
瞬间200万消息提交，如何保证不对服务和数据库造成压力
zookeeper如何感应节点挂了
设计长连接和pusher

zookeeper原理 master选举
动态代理
编译原理

NIO bug netty如何规避
阻塞 非阻塞 同步 异步
netty如何实现同步 异步
netty断线重连
微服务组件	//TODO


//BMS为什么这样设计
网络IO密集型应用
引入组件，增加系统的复杂度，保证activemq高可用比较麻烦
利用多线程
利用MQ，会增加MQ需要的属性消息，增加额外的网络开支
推送给分销商的http都是耗时操作，所以解耦db操作和真正推送过程
配置复杂
接收和推送不能放一个应用

dubbo 分层太多，结构复杂



